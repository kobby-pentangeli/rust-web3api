### Web3API Header START ###
scalar UInt
scalar UInt8
scalar UInt16
scalar UInt32
scalar UInt64
scalar Int
scalar Int8
scalar Int16
scalar Int32
scalar Int64
scalar Bytes
scalar BigInt

directive @imported(
  uri: String!
  namespace: String!
  nativeType: String!
) on OBJECT | ENUM

directive @imports(
  types: [String!]!
) on OBJECT
### Web3API Header END ###

type Query @imports(
  types: [
    "Namespace_Query",
    "Namespace_CustomType",
    "Namespace_ObjectType",
    "Namespace_NestedObjectType",
    "Namespace_Imported_NestedObjectType",
    "Namespace_Imported_ObjectType",
    "Namespace_CustomEnum",
    "Namespace_Imported_Enum"
  ]
) {
  method1(
    str: String!
    optStr: String
    u: UInt!
    uArrayArray: [[UInt]]!
  ): String!

  method2(
    arg: [String!]!
  ): [Int64!]!
}

type Mutation @imports(
  types: [
    "Namespace_Query",
    "Namespace_Mutation",
    "Namespace_NestedObjectType",
    "Namespace_ObjectType",
    "Namespace_Imported_NestedObjectType",
    "Namespace_Imported_ObjectType",
    "Namespace_CustomType",
    "Namespace_CustomEnum",
    "Namespace_Imported_Enum",
    "JustMutation_Mutation"
  ]
) {
  method1(
    str: String!
    optStr: String
    u: UInt!
    uArrayArray: [[UInt]]!
  ): String!

  method2(
    arg: [String!]!
  ): [Int64!]!
}

type CustomQueryType {
  str: String!
  optStr: String
  u: UInt!
  optU: UInt
  u8: UInt8!
  u64: UInt64!
  i: Int!
  i8: Int8!
  i64: Int64!
  bytes: Bytes!
  uArray: [UInt!]!
  uOptArray: [UInt!]
  optStrOptArray: [String]
  crazyArray: [[[[UInt64!]]!]]
  commonType: CommonType!
  customType: Namespace_CustomType!
}

type AnotherQueryType {
  prop: String
}

type CommonType {
  prop: UInt8!
  nestedObject: NestedType!
  objectArray: [[ArrayObject]]!
}

type NestedType {
  prop: String!
}

type ArrayObject {
  prop: String!
}

type CustomMutationType {
  str: String!
  optStr: String
  u: UInt!
  optU: UInt
  u8: UInt8!
  u64: UInt64!
  i: Int!
  i8: Int8!
  i64: Int64!
  bytes: Bytes!
  uArray: [UInt!]!
  uOptArray: [UInt!]
  optStrOptArray: [String]
  crazyArray: [[[[UInt64!]]!]]
  commonType: CommonType!
  customType: Namespace_CustomType!
}

type AnotherMutationType {
  prop: String
}

### Imported Queries START ###

type Namespace_Query @imported(
  uri: "test.eth",
  namespace: "Namespace",
  nativeType: "Query"
) {
  method1(
    str: String!
    optStr: String
    u: UInt!
    optU: UInt
    uArrayArray: [[UInt]]!
  ): String!

  method2(
    arg: [String!]!
  ): [Int64!]!
}

type Namespace_Mutation @imported(
  uri: "test.eth",
  namespace: "Namespace",
  nativeType: "Mutation"
) {
  method1(
    str: String!
    optStr: String
    u: UInt!
    optU: UInt
    uArrayArray: [[UInt]]!
  ): String!

  method2(
    arg: [String!]!
  ): [Int64!]!

  localObjects(
    nestedLocalObject: Namespace_NestedObjectType
    localObjectArray: [Namespace_NestedObjectType!]
  ): Namespace_NestedObjectType

  importedObjects(
    nestedLocalObject: Namespace_Imported_NestedObjectType
    localObjectArray: [Namespace_Imported_NestedObjectType!]
  ): Namespace_Imported_NestedObjectType
}

type JustMutation_Mutation @imported(
  uri: "just.mutation.eth",
  namespace: "JustMutation",
  nativeType: "Mutation"
) {
  method(
    arg: [String!]!
  ): [Int64!]!
}

### Imported Queries END ###

### Imported Objects START ###

type Namespace_CustomType @imported(
  uri: "test.eth",
  namespace: "Namespace",
  nativeType: "CustomType"
) {
  str: String!
  optStr: String
  u: UInt!
  optU: UInt
  u8: UInt8!
  u16: UInt16!
  u32: UInt32!
  u64: UInt64!
  i: Int!
  i8: Int8!
  i16: Int16!
  i32: Int32!
  i64: Int64!
  bytes: Bytes!
  uArray: [UInt!]!
  uOptArray: [UInt!]
  optUOptArray: [UInt]
  optStrOptArray: [String]
  uArrayArray: [[UInt!]!]!
  uOptArrayOptArray: [[UInt64]]!
  uArrayOptArrayArray: [[[UInt64!]!]]!
  crazyArray: [[[[UInt64!]]!]]
  object: Namespace_ObjectType!
  optObject: Namespace_ObjectType
  nestedObject: Namespace_NestedObjectType!
  optNestedObject: Namespace_NestedObjectType
  optNestedObjectArray: [Namespace_NestedObjectType]!
  importedNestedObject: Namespace_Imported_NestedObjectType!
  optImportedNestedObjectArray: [Namespace_Imported_NestedObjectType]!
  enum: Namespace_CustomEnum!
  optEnum: Namespace_CustomEnum
  importedEnum: Namespace_Imported_Enum!
  optImportedEnum: Namespace_Imported_Enum
}

type Namespace_ObjectType @imported(
  uri: "test.eth",
  namespace: "Namespace",
  nativeType: "ObjectType"
) {
  prop: String!
}

type Namespace_NestedObjectType @imported(
  uri: "test.eth",
  namespace: "Namespace",
  nativeType: "NestedObjectType"
) {
  nestedObject: Namespace_ObjectType!
}

type Namespace_Imported_NestedObjectType @imported(
  uri: "test.eth",
  namespace: "Namespace",
  nativeType: "Imported_NestedObjectType"
) {
  nestedObject: Namespace_Imported_ObjectType!
}

type Namespace_Imported_ObjectType @imported(
  uri: "test.eth",
  namespace: "Namespace",
  nativeType: "Imported_ObjectType"
) {
  prop: String!
}

enum Namespace_CustomEnum @imported(
  namespace: "Namespace",
  uri: "test.eth",
  nativeType: "CustomEnum"
) {
  STRING
  BYTES
}

enum Namespace_Imported_Enum @imported(
  namespace: "Namespace",
  uri: "test.eth",
  nativeType: "Imported_Enum"
) {
  STRING
  BYTES
}

### Imported Objects END ###
