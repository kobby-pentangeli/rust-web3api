scalar UInt
scalar UInt8
scalar UInt16
scalar UInt32
scalar UInt64
scalar Int
scalar Int8
scalar Int16
scalar Int32
scalar Int64
scalar Bytes
scalar BigInt

directive @imported(
  uri: String!
  namespace: String!
  nativeType: String!
) on OBJECT | ENUM

directive @imports(
  types: [String!]!
) on OBJECT

enum CustomEnum {
  TEXT
  BINARY
}

type CustomType {
  str: String!
  optStr: String
  u: UInt!
  optU: UInt
  u8: UInt8!
  u16: UInt16!
  u32: UInt32!
  u64: UInt64!
  i: Int!
  i8: Int8!
  i16: Int16!
  i32: Int32!
  i64: Int64!
  bigint: BigInt!
  optBigint: BigInt
  bytes: Bytes!
  uArray: [UInt!]!
  uOptArray: [UInt!]
  optUOptArray: [UInt]
  optStrOptArray: [String]
  uArrayArray: [[UInt!]!]!
  uOptArrayOptArray: [[UInt64]]!
  uArrayOptArrayArray: [[[UInt64!]!]]!
  crazyArray: [[[[UInt64!]]!]]
  objectArray: [UserObject!]!
  objectArrayArray: [[UserObject!]!]!
  nestedObject: UserObject!
  optNestedObject: UserObject
  optEnum: CustomEnum
  enum: CustomEnum!
  enumArray: [CustomEnum!]!,
  optEnumArray: [CustomEnum]
}

type AnotherType {
  prop: String
}

type UserObject {
  fieldA: String
  fieldB: Int!
}

type Query @imports(
  types: [ "TestImport_Query" ]
) {
  queryMethod(
    arg: String!
  ): [Int]!

  userObjectMethod(
    userObject: UserObject
    arrayObject: [UserObject!]!
  ): UserObject!

  enumMethod(
    enum: CustomEnum,
    arrayEnum: [CustomEnum!]!
  ): CustomEnum!
}

type TestImport_Query @imported(
  uri: "testimport.uri.eth",
  namespace: "TestImport",
  nativeType: "Query"
) {
  importedMethod(
    str: String!
    optStr: String
    u: UInt!
    optU: UInt
    uArrayArray: [[UInt]]!
  ): String!

  anotherMethod(
    arg: [String!]!
  ): [Int64]!

  importedObjectMethod(
    importedObject: TestImport_Object!
  ): TestImport_Object!

  importedEnumMethod(
    enum: TestImport_Enum!
    optEnum: TestImport_Enum
  ): TestImport_Enum!
}

type TestImport_Mutation @imported(
  uri: "testimport.uri.eth",
  namespace: "TestImport",
  nativeType: "Mutation"
) {
  importedMethod(
    str: String!
  ): String!
}

type TestImport_Object @imported(
  uri: "testimport.uri.eth",
  namespace: "TestImport",
  nativeType: "Object"
) {
  prop: String!
  nested: TestImport_NestedObject!
}

type TestImport_NestedObject @imported(
  uri: "testimport.uri.eth",
  namespace: "TestImport",
  nativeType: "NestedObject"
) {
  foo: [String!]!
  circular: TestImport_Object
}

enum TestImport_Enum @imported(
  namespace: "TestImport",
  uri: "testimport.uri.eth",
  nativeType: "Enum"
) {
  TEXT
  BYTES
}
